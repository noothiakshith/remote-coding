generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_CaT6LgGciw0h@ep-little-credit-a1lgh4j4-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model Language {
  id               Int          @id
  name             String
  extension        String
  compileCommand   String       @default("")
  executionCommand String       @default("")
  testCommand      String       @default("")
  Submission       Submission[]
}

model User {
  id          String       @id @default(uuid())
  username    String       @unique
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  submissions Submission[]
}

model Problem {
  id          String       @id @default(uuid())
  title       String
  description String
  difficulty  String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  submissions Submission[]
}

model Submission {
  id                   String           @id @default(uuid())
  problemId            String
  source_code          String
  mainFuncName         String           @default("main")
  stdin                String[]         @default([""])
  stdout               String           @default("")
  language_id          Int
  userId               String
  executionContainerId String           @default("")
  status               SubmissionStatus @default(Queued)
  testCasesPassed      String[]
  runtime              Float?
  memoryUsage          Float?
  errorMessage         String?
  createdAt            DateTime         @default(now())
  language             Language         @relation(fields: [language_id], references: [id])
  problem              Problem          @relation(fields: [problemId], references: [id])
  user                 User             @relation(fields: [userId], references: [id])
}

enum SubmissionStatus {
  Queued
  Successful
  Error
}
